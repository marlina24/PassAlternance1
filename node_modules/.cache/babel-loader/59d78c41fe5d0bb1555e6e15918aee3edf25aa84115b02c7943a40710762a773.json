{"ast":null,"code":"var _jsxFileName = \"/Users/victormarlina/Desktop/passAlternance/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./ProfilePage.css\";\nimport ProfileHeader from \"../components/ProfileHeader/ProfileHeader\";\nimport ProfileDetails from \"../components/ProfileDetails/ProfileDetails\";\nimport Experience from \"../components/Experience/Experience\";\nimport SocialMedia from \"../components/SocialMedia/SocialMedia\";\nimport Qualities from \"../components/Qualities/Qualities\";\nimport Wishes from \"../components/Wishes/Wishes\";\nimport Formation from \"../components/Formation/Formation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !userId) {\n      navigate(\"/login\"); // Redirige vers la page de connexion si l'utilisateur n'est pas connecté\n      return;\n    }\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(`http://localhost:3002/api/profile/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}` // Token pour l'authentification\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Erreur lors du chargement du profil\");\n        }\n        const data = await response.json();\n        setProfileData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, [navigate]);\n  const handleUpdateExperiences = async updatedExperiences => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    try {\n      const response = await fetch(`http://localhost:3002/api/experiences/${userId}/experiences`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          experiences: updatedExperiences\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Erreur lors de la mise à jour des expériences\");\n      }\n      setProfileData(prevData => ({\n        ...prevData,\n        experiences: updatedExperiences\n      }));\n    } catch (err) {\n      console.error(\"Erreur lors de la mise à jour des expériences :\", err.message);\n    }\n  };\n  const handleUpdateProfile = async formData => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    console.log(\"User ID Stocké :\", localStorage.getItem(\"userId\"));\n    console.log(\"Token Stocké :\", localStorage.getItem(\"token\"));\n    try {\n      const response = await fetch(`http://localhost:3002/api/profile/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Erreur lors de la mise à jour du profil\");\n      }\n      const updatedUser = await response.json();\n      setProfileData(prevData => ({\n        ...prevData,\n        user: {\n          ...prevData.user,\n          ...formData\n        }\n      }));\n    } catch (err) {\n      console.error(\"Erreur lors de la mise à jour :\", err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Erreur : \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      user: profileData.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileDetails, {\n      user: profileData.user,\n      onUpdate: handleUpdateProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wishes, {\n      wishes: profileData.wishes,\n      userId: profileData.user.id,\n      token: localStorage.getItem(\"token\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Qualities, {\n      qualities: profileData.qualities,\n      userId: profileData.user.id,\n      token: localStorage.getItem(\"token\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formation, {\n      formations: profileData.formations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialMedia, {\n      socialLinks: profileData.socialLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Experience, {\n      userId: profileData.user.id,\n      experiences: profileData.experiences || [],\n      onUpdateExperiences: handleUpdateExperiences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"hvzCTYGoTKsJLpHfhJe7nMKa6FI=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ProfileHeader","ProfileDetails","Experience","SocialMedia","Qualities","Wishes","Formation","jsxDEV","_jsxDEV","ProfilePage","_s","navigate","profileData","setProfileData","loading","setLoading","error","setError","token","localStorage","getItem","userId","fetchProfile","response","fetch","headers","Authorization","ok","Error","data","json","err","message","handleUpdateExperiences","updatedExperiences","method","body","JSON","stringify","experiences","prevData","console","handleUpdateProfile","formData","log","updatedUser","user","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onUpdate","wishes","id","qualities","formations","socialLinks","onUpdateExperiences","_c","$RefreshReg$"],"sources":["/Users/victormarlina/Desktop/passAlternance/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./ProfilePage.css\";\r\nimport ProfileHeader from \"../components/ProfileHeader/ProfileHeader\";\r\nimport ProfileDetails from \"../components/ProfileDetails/ProfileDetails\";\r\nimport Experience from \"../components/Experience/Experience\";\r\nimport SocialMedia from \"../components/SocialMedia/SocialMedia\";\r\nimport Qualities from \"../components/Qualities/Qualities\";\r\nimport Wishes from \"../components/Wishes/Wishes\";\r\nimport Formation from \"../components/Formation/Formation\";\r\n\r\nconst ProfilePage = () => {\r\n  const navigate = useNavigate();\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (!token || !userId) {\r\n      navigate(\"/login\"); // Redirige vers la page de connexion si l'utilisateur n'est pas connecté\r\n      return;\r\n    }\r\n\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3002/api/profile/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`, // Token pour l'authentification\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Erreur lors du chargement du profil\");\r\n        }\r\n        const data = await response.json();\r\n        setProfileData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [navigate]);\r\n\r\n  const handleUpdateExperiences = async (updatedExperiences) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3002/api/experiences/${userId}/experiences`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ experiences: updatedExperiences }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de la mise à jour des expériences\");\r\n      }\r\n\r\n      setProfileData((prevData) => ({\r\n        ...prevData,\r\n        experiences: updatedExperiences,\r\n      }));\r\n    } catch (err) {\r\n      console.error(\r\n        \"Erreur lors de la mise à jour des expériences :\",\r\n        err.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdateProfile = async (formData) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    console.log(\"User ID Stocké :\", localStorage.getItem(\"userId\"));\r\n    console.log(\"Token Stocké :\", localStorage.getItem(\"token\"));\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3002/api/profile/${userId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de la mise à jour du profil\");\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setProfileData((prevData) => ({\r\n        ...prevData,\r\n        user: { ...prevData.user, ...formData },\r\n      }));\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la mise à jour :\", err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Chargement...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Erreur : {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <ProfileHeader user={profileData.user} />\r\n      <ProfileDetails user={profileData.user} onUpdate={handleUpdateProfile} />\r\n      <Wishes\r\n        wishes={profileData.wishes}\r\n        userId={profileData.user.id}\r\n        token={localStorage.getItem(\"token\")}\r\n      />\r\n      <Qualities\r\n        qualities={profileData.qualities}\r\n        userId={profileData.user.id}\r\n        token={localStorage.getItem(\"token\")}\r\n      />\r\n      <Formation formations={profileData.formations} />\r\n      <SocialMedia socialLinks={profileData.socialLinks} />\r\n      <Experience\r\n        userId={profileData.user.id}\r\n        experiences={profileData.experiences || []}\r\n        onUpdateExperiences={handleUpdateExperiences}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}