{"ast":null,"code":"var _jsxFileName = \"/Users/victormarlina/Desktop/passAlternance/src/pages/SearchOffersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./SearchOffersPage.css\";\nimport PageHeader from \"../components/PageHeader/PageHeader\";\nimport Filters from \"../components/Filters/Filters\";\nimport Offers from \"../components/Offers/Offers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchOffersPage = () => {\n  _s();\n  const [offers, setOffers] = useState([]);\n  const [filters, setFilters] = useState({\n    search: \"\",\n    minSalary: 0,\n    type: \"\"\n  });\n  const [favoriteOffers, setFavoriteOffers] = useState(new Set());\n  const fetchOffers = async () => {\n    try {\n      const params = new URLSearchParams(filters);\n      const response = await fetch(`http://localhost:5000/api/offers?${params}`);\n      if (!response.ok) {\n        throw new Error(\"Erreur lors de la récupération des offres.\");\n      }\n      const data = await response.json();\n\n      // Trier par date de publication (du plus récent au plus ancien)\n      const sortedOffers = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n      setOffers(sortedOffers);\n    } catch (err) {\n      console.error(\"Erreur :\", err.message);\n    }\n  };\n  const handleDeleteOffer = async offerId => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\"); // ✅ Récupérer l'ID utilisateur stocké\n\n    if (!userId) {\n      alert(\"Utilisateur non identifié !\");\n      return;\n    }\n    if (!window.confirm(\"Voulez-vous vraiment supprimer cette offre ?\")) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/offers/${offerId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userID: userId\n        }) // ✅ Envoyer l'ID utilisateur\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Erreur lors de la suppression de l'offre.\");\n      }\n      console.log(\"✅ Offre supprimée avec succès !\");\n\n      // ⚡ Mettre à jour la liste des offres après suppression\n      setOffers(prevOffers => prevOffers.filter(offer => offer.id !== offerId));\n    } catch (err) {\n      console.error(\"❌ Erreur :\", err.message);\n      alert(err.message);\n    }\n  };\n  const addToFavorites = async offerId => {\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      alert(\"Utilisateur non identifié !\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/offers/favorites\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          offerId\n        })\n      });\n      if (!response.ok) throw new Error(\"Erreur lors de l'ajout aux favoris.\");\n      console.log(\"✅ Offre ajoutée aux favoris !\");\n    } catch (err) {\n      console.error(\"❌ Erreur :\", err.message);\n    }\n  };\n  const removeFromFavorites = async offerId => {\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) {\n      alert(\"Utilisateur non identifié !\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/favorites/${offerId}/${userId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Erreur lors de la suppression des favoris.\");\n      console.log(\"✅ Offre supprimée des favoris !\");\n\n      // ⚡ Supprimer l'offre de la liste des favoris immédiatement\n      setFavoriteOffers(prevFavorites => {\n        const newFavorites = new Set(prevFavorites);\n        newFavorites.delete(offerId);\n        return newFavorites;\n      });\n      fetchFavoris(); // ✅ Met à jour les favoris immédiatement après suppression\n    } catch (err) {\n      console.error(\"❌ Erreur :\", err.message);\n    }\n  };\n  const fetchFavoris = async () => {\n    const userId = localStorage.getItem(\"userId\");\n    if (!userId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/favorites/${userId}`);\n      if (!response.ok) throw new Error(\"Erreur lors de la récupération des favoris.\");\n      const data = await response.json();\n      console.log(\"📌 Favoris récupérés :\", data);\n      setFavoriteOffers(new Set(data.map(offer => offer.id))); // ✅ Stocker uniquement les IDs des favoris\n    } catch (err) {\n      console.error(\"Erreur :\", err.message);\n    }\n  };\n  useEffect(() => {\n    fetchOffers();\n  }, [filters]); // ⚡ Met à jour les offres quand les filtres changent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-offers-page\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-content\",\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        onFiltersChange: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offers, {\n        offers: offers,\n        setOffers: setOffers,\n        addToFavorites: addToFavorites,\n        removeFromFavorites: removeFromFavorites,\n        handleDeleteOffer: handleDeleteOffer,\n        fetchFavoris: fetchFavoris // ✅ Passe `fetchFavoris`\n        ,\n        favoriteOffers: favoriteOffers // ✅ Passe les favoris\n        ,\n        activeTab: \"all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchOffersPage, \"CBvBfZlYTK63G//he0WD5wNW8MI=\");\n_c = SearchOffersPage;\nexport default SearchOffersPage;\nvar _c;\n$RefreshReg$(_c, \"SearchOffersPage\");","map":{"version":3,"names":["React","useState","useEffect","PageHeader","Filters","Offers","jsxDEV","_jsxDEV","SearchOffersPage","_s","offers","setOffers","filters","setFilters","search","minSalary","type","favoriteOffers","setFavoriteOffers","Set","fetchOffers","params","URLSearchParams","response","fetch","ok","Error","data","json","sortedOffers","sort","a","b","Date","created_at","err","console","error","message","handleDeleteOffer","offerId","token","localStorage","getItem","userId","alert","window","confirm","method","headers","Authorization","body","JSON","stringify","userID","errorData","log","prevOffers","filter","offer","id","addToFavorites","removeFromFavorites","prevFavorites","newFavorites","delete","fetchFavoris","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFiltersChange","activeTab","_c","$RefreshReg$"],"sources":["/Users/victormarlina/Desktop/passAlternance/src/pages/SearchOffersPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./SearchOffersPage.css\";\r\nimport PageHeader from \"../components/PageHeader/PageHeader\";\r\nimport Filters from \"../components/Filters/Filters\";\r\nimport Offers from \"../components/Offers/Offers\";\r\n\r\nconst SearchOffersPage = () => {\r\n  const [offers, setOffers] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    minSalary: 0,\r\n    type: \"\",\r\n  });\r\n\r\n  const [favoriteOffers, setFavoriteOffers] = useState(new Set());\r\n\r\n  const fetchOffers = async () => {\r\n    try {\r\n      const params = new URLSearchParams(filters);\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/offers?${params}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de la récupération des offres.\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Trier par date de publication (du plus récent au plus ancien)\r\n      const sortedOffers = data.sort(\r\n        (a, b) => new Date(b.created_at) - new Date(a.created_at)\r\n      );\r\n\r\n      setOffers(sortedOffers);\r\n    } catch (err) {\r\n      console.error(\"Erreur :\", err.message);\r\n    }\r\n  };\r\n  const handleDeleteOffer = async (offerId) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\"); // ✅ Récupérer l'ID utilisateur stocké\r\n\r\n    if (!userId) {\r\n      alert(\"Utilisateur non identifié !\");\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(\"Voulez-vous vraiment supprimer cette offre ?\")) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/offers/${offerId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ userID: userId }), // ✅ Envoyer l'ID utilisateur\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.message || \"Erreur lors de la suppression de l'offre.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Offre supprimée avec succès !\");\r\n\r\n      // ⚡ Mettre à jour la liste des offres après suppression\r\n      setOffers((prevOffers) =>\r\n        prevOffers.filter((offer) => offer.id !== offerId)\r\n      );\r\n    } catch (err) {\r\n      console.error(\"❌ Erreur :\", err.message);\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const addToFavorites = async (offerId) => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (!userId) {\r\n      alert(\"Utilisateur non identifié !\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/offers/favorites\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userId, offerId }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Erreur lors de l'ajout aux favoris.\");\r\n\r\n      console.log(\"✅ Offre ajoutée aux favoris !\");\r\n    } catch (err) {\r\n      console.error(\"❌ Erreur :\", err.message);\r\n    }\r\n  };\r\n\r\n  const removeFromFavorites = async (offerId) => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (!userId) {\r\n      alert(\"Utilisateur non identifié !\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/favorites/${offerId}/${userId}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n\r\n      if (!response.ok)\r\n        throw new Error(\"Erreur lors de la suppression des favoris.\");\r\n\r\n      console.log(\"✅ Offre supprimée des favoris !\");\r\n\r\n      // ⚡ Supprimer l'offre de la liste des favoris immédiatement\r\n      setFavoriteOffers((prevFavorites) => {\r\n        const newFavorites = new Set(prevFavorites);\r\n        newFavorites.delete(offerId);\r\n        return newFavorites;\r\n      });\r\n\r\n      fetchFavoris(); // ✅ Met à jour les favoris immédiatement après suppression\r\n    } catch (err) {\r\n      console.error(\"❌ Erreur :\", err.message);\r\n    }\r\n  };\r\n\r\n  const fetchFavoris = async () => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (!userId) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/favorites/${userId}`\r\n      );\r\n      if (!response.ok)\r\n        throw new Error(\"Erreur lors de la récupération des favoris.\");\r\n\r\n      const data = await response.json();\r\n      console.log(\"📌 Favoris récupérés :\", data);\r\n\r\n      setFavoriteOffers(new Set(data.map((offer) => offer.id))); // ✅ Stocker uniquement les IDs des favoris\r\n    } catch (err) {\r\n      console.error(\"Erreur :\", err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOffers();\r\n  }, [filters]); // ⚡ Met à jour les offres quand les filtres changent\r\n\r\n  return (\r\n    <div className=\"search-offers-page\">\r\n      <PageHeader />\r\n      <div className=\"search-content\">\r\n        <Filters onFiltersChange={setFilters} />\r\n        <Offers\r\n          offers={offers}\r\n          setOffers={setOffers}\r\n          addToFavorites={addToFavorites}\r\n          removeFromFavorites={removeFromFavorites}\r\n          handleDeleteOffer={handleDeleteOffer}\r\n          fetchFavoris={fetchFavoris} // ✅ Passe `fetchFavoris`\r\n          favoriteOffers={favoriteOffers} // ✅ Passe les favoris\r\n          activeTab={\"all\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchOffersPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}