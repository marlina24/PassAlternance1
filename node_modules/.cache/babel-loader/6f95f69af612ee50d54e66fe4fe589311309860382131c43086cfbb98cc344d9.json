{"ast":null,"code":"var _jsxFileName = \"/Users/victormarlina/Desktop/passAlternance/src/components/Qualities/Qualities.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Qualities.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Qualities = ({\n  qualities = [],\n  userId,\n  token\n}) => {\n  _s();\n  const [qualitiesState, setQualitiesState] = useState(qualities);\n  const addQuality = async () => {\n    const newQuality = prompt(\"Ajouter une nouvelle qualité :\");\n    if (!newQuality) {\n      alert(\"Veuillez entrer une qualité valide.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3002/api/profile/${userId}/qualities`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          quality: newQuality\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Erreur lors de l'ajout de la qualité\");\n      }\n      const data = await response.json();\n      setQualitiesState(prevQualities => [...prevQualities, {\n        id: data.id,\n        quality: newQuality\n      }]);\n    } catch (err) {\n      console.error(\"Erreur :\", err.message);\n    }\n  };\n  const removeQuality = async qualityId => {\n    console.log(\"ID de la qualité à supprimer :\", qualityId); // Ajoutez ceci pour déboguer\n    if (!qualityId) {\n      alert(\"L'ID de la qualité est introuvable !\");\n      return;\n    }\n    if (!window.confirm(\"Voulez-vous vraiment supprimer cette qualité ?\")) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3002/api/profile/${userId}/qualities/${qualityId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Erreur lors de la suppression de la qualité\");\n      }\n      setQualitiesState(prevQualities => prevQualities.filter(quality => quality.id !== qualityId));\n    } catch (err) {\n      console.error(\"Erreur :\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"qualities-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mes qualit\\xE9s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qualities-list\",\n      children: qualitiesState.map(quality => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"quality\",\n        children: [quality.quality, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeQuality(quality.id),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, quality.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-quality-button\",\n      onClick: addQuality,\n      children: \"Ajouter une qualit\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Qualities, \"6GBC6tKww3CcEqqRF8NTs5iB80E=\");\n_c = Qualities;\nexport default Qualities;\nvar _c;\n$RefreshReg$(_c, \"Qualities\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Qualities","qualities","userId","token","_s","qualitiesState","setQualitiesState","addQuality","newQuality","prompt","alert","response","fetch","method","headers","Authorization","body","JSON","stringify","quality","ok","Error","data","json","prevQualities","id","err","console","error","message","removeQuality","qualityId","log","window","confirm","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/victormarlina/Desktop/passAlternance/src/components/Qualities/Qualities.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Qualities.css\";\r\n\r\nconst Qualities = ({ qualities = [], userId, token }) => {\r\n  const [qualitiesState, setQualitiesState] = useState(qualities);\r\n\r\n  const addQuality = async () => {\r\n    const newQuality = prompt(\"Ajouter une nouvelle qualité :\");\r\n    if (!newQuality) {\r\n      alert(\"Veuillez entrer une qualité valide.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3002/api/profile/${userId}/qualities`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ quality: newQuality }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de l'ajout de la qualité\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setQualitiesState((prevQualities) => [\r\n        ...prevQualities,\r\n        { id: data.id, quality: newQuality },\r\n      ]);\r\n    } catch (err) {\r\n      console.error(\"Erreur :\", err.message);\r\n    }\r\n  };\r\n\r\n  const removeQuality = async (qualityId) => {\r\n    console.log(\"ID de la qualité à supprimer :\", qualityId); // Ajoutez ceci pour déboguer\r\n    if (!qualityId) {\r\n      alert(\"L'ID de la qualité est introuvable !\");\r\n      return;\r\n    }\r\n    if (!window.confirm(\"Voulez-vous vraiment supprimer cette qualité ?\")) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3002/api/profile/${userId}/qualities/${qualityId}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de la suppression de la qualité\");\r\n      }\r\n\r\n      setQualitiesState((prevQualities) =>\r\n        prevQualities.filter((quality) => quality.id !== qualityId)\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Erreur :\", err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"qualities-section\">\r\n      <h2>Mes qualités</h2>\r\n      <div className=\"qualities-list\">\r\n        {qualitiesState.map((quality) => (\r\n          <span key={quality.id} className=\"quality\">\r\n            {quality.quality}{\" \"}\r\n            <button onClick={() => removeQuality(quality.id)}>✖</button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"add-quality-button\" onClick={addQuality}>\r\n        Ajouter une qualité\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Qualities;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}